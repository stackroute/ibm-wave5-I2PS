version: '2'

services:
  eureka-server:
    build: eureka-server/
    restart: always
    network_mode: "host"
    hostname: localhost
    image: eureka-server
    ports:
      - 8085:8085

  config-service:
    build: config-server/
    restart: always
    network_mode: "host"
    image: config-service
    hostname: localhost
    ports:
      - 8888:8888

  zuul-api:
    build: zuul-api/
    depends_on:
      - config-service
      - eureka-server
      - innovator-profile-service
      - intelligent-service
      - idea-hub-service
      - recommendation-service
      - service-provider-profile-service
      - user-login-service
      - innovator-management-service
    restart: always
    network_mode: "host"
    image: zuul-api
    hostname: localhost
    ports:
      - 8080:8080


  mongo:
    image: mongo
    ports:
      - 27017:27017
    expose:
      - 27017
    container_name: mongo-service
    network_mode: "host"
    hostname: localhost
    volumes:
      - $HOME/data/db:/data/db

  user-login-service:
    build: user-login-service/
    depends_on:
     - eureka-server
     - rabbitmq
     - mysql
    restart: always
    network_mode: "host"
    image: user-login-service
    hostname: localhost
    ports:
    - 8088:8088

  service-provider-profile-service:
    build: service-provider-profile-service/
    depends_on:
      - config-service
      - eureka-server
      - rabbitmq
      - mongo
    restart: always
    network_mode: "host"
    image: service-provider-profile-service
    hostname: localhost
    ports:
      - 8077:8077

  innovator-profile-service:
      build: innovator-profile-service/
      depends_on:
        - config-service
        - eureka-server
        - rabbitmq
        - mongo
      restart: always
      network_mode: "host"
      image: innovator-profile-service
      hostname: localhost
      ports:
        - 8094:8094

  intelligent-service:
    build: intelligent-service/
    depends_on:
      - config-service
      - eureka-server
      - rabbitmq
      - mongo
    restart: always
    network_mode: "host"
    image: intelligent-service
    hostname: localhost
    ports:
      - 8089:8089
      
      
  idea-hub-service:
    build: idea-hub-service/
    depends_on:
      - config-service
      - eureka-server
      - rabbitmq
      - mongo
    restart: always
    network_mode: "host"
    image:  idea-hub-service
    hostname: localhost
    ports:
      - 8063:8063



  recommendation-service:
    build: recommendation-service/
    depends_on:
        - config-service
        - eureka-server
        - rabbitmq
        - neo4j
    restart: always
    network_mode: "host"
    image:  recommendation-service
    hostname: localhost
    ports:
        - 8082:8082

  innovator-management-service:
    build: innovator-management-service/
    depends_on:
      - eureka-server
      - rabbitmq
      - mongo
    restart: always
    network_mode: "host"
    image:  innovator-management-service
    hostname: localhost
    ports:
      - 8060:8060


  mysql:
    image: mysql:5.7
    ports:
      - 3306:3306
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: LoginDB
      MYSQL_PASSWORD: root
      MYSQL_USER: root
    volumes:
      - $HOME/data/datasql:/var/lib/mysql
    network_mode: "host"
    hostname: localhost
    restart: always

  rabbitmq:
    image: rabbitmq:3.7.5-management
    hostname: localhost
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - $HOME/data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    environment:
      RABBITMQ_ERLANG_COOKIE: 6085e2412b6fa88647466c6a81c0cea0
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /



  neo4j:
    image: neo4j:3.0
    ports:
      - 7474:7474
      - 7687:7687
    expose:
      - 7474
    container_name: neo4j_docker
    network_mode: host
    hostname: localhost
    restart: always
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/import:/import
    environment:
      - NEO4J_AUTH=neo4j/root123


  angular-frontend:
    build: angular-frontend/
    image: angular-frontend
    ports:
      - 8042:8042
    restart: always
    network_mode: "host"
    hostname: localhost

  prometheus:
    image: prom/prometheus
    ports: 
      - 9090:9090
    restart: always
    network_mode: host
    hostname: localhost
    volumes:
      - $HOME/collabjunction/collabjunction/prometheus.yml:/etc/prometheus/prometheus.yml
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml" 
      - "--storage.tsdb.path=/prometheus"
  
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    network_mode: "host"
    hostname: localhost

